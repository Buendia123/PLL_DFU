# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import datetime
import os

from PyQt5 import QtCore, QtWidgets

from ALdfuCh1 import *
from ALdfuCh2 import *
from LogProvider import *


class QTextBrowserHandler(logging.Handler):
    def __init__(self, text_browser):
        super().__init__()
        self.text_browser = text_browser

    def emit(self, record):
        msg = self.format(record)
        self.text_browser.append(msg)


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1041, 641)
        self.ClickButton = QtWidgets.QPushButton(Form)
        self.ClickButton.setGeometry(QtCore.QRect(810, 440, 211, 51))
        self.ClickButton.setObjectName("ClickButton")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(50, 50, 121, 51))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(50, 150, 121, 51))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(Form)
        self.lineEdit_3.setGeometry(QtCore.QRect(400, 50, 121, 51))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(Form)
        self.lineEdit_4.setGeometry(QtCore.QRect(400, 150, 121, 51))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.Ch1Result = QtWidgets.QTextEdit(Form)
        self.Ch1Result.setGeometry(QtCore.QRect(220, 50, 111, 51))
        self.Ch1Result.setObjectName("Ch1Result")
        self.Ch2Result = QtWidgets.QTextEdit(Form)
        self.Ch2Result.setGeometry(QtCore.QRect(220, 150, 111, 51))
        self.Ch2Result.setObjectName("Ch2Result")
        self.Ch3Result = QtWidgets.QTextEdit(Form)
        self.Ch3Result.setGeometry(QtCore.QRect(560, 50, 111, 51))
        self.Ch3Result.setObjectName("Ch3Result")
        self.Ch4Result = QtWidgets.QTextEdit(Form)
        self.Ch4Result.setGeometry(QtCore.QRect(560, 150, 111, 51))
        self.Ch4Result.setObjectName("Ch4Result")
        self.SNCh1 = QtWidgets.QTextEdit(Form)
        self.SNCh1.setGeometry(QtCore.QRect(810, 40, 201, 51))
        self.SNCh1.setObjectName("SNCh1")
        self.SNCh2 = QtWidgets.QTextEdit(Form)
        self.SNCh2.setGeometry(QtCore.QRect(810, 110, 201, 51))
        self.SNCh2.setObjectName("SNCh2")
        self.SNCh3 = QtWidgets.QTextEdit(Form)
        self.SNCh3.setGeometry(QtCore.QRect(810, 180, 201, 51))
        self.SNCh3.setObjectName("SNCh3")
        self.SNCh4 = QtWidgets.QTextEdit(Form)
        self.SNCh4.setGeometry(QtCore.QRect(810, 260, 201, 51))
        self.SNCh4.setObjectName("SNCh4")
        self.lineEdit_5 = QtWidgets.QLineEdit(Form)
        self.lineEdit_5.setGeometry(QtCore.QRect(730, 50, 61, 30))
        self.lineEdit_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(Form)
        self.lineEdit_6.setGeometry(QtCore.QRect(730, 120, 61, 30))
        self.lineEdit_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_7 = QtWidgets.QLineEdit(Form)
        self.lineEdit_7.setGeometry(QtCore.QRect(730, 190, 61, 30))
        self.lineEdit_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_7.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_8 = QtWidgets.QLineEdit(Form)
        self.lineEdit_8.setGeometry(QtCore.QRect(730, 270, 61, 30))
        self.lineEdit_8.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_8.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_9 = QtWidgets.QLineEdit(Form)
        self.lineEdit_9.setGeometry(QtCore.QRect(730, 350, 61, 30))
        self.lineEdit_9.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_9.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.WorkStatus = QtWidgets.QTextEdit(Form)
        self.WorkStatus.setGeometry(QtCore.QRect(810, 340, 201, 51))
        self.WorkStatus.setObjectName("WorkStatus")
        self.LogTextEdit = QtWidgets.QTextEdit(Form)
        self.LogTextEdit.setGeometry(QtCore.QRect(20, 220, 691, 381))
        self.LogTextEdit.setObjectName("LogTextEdit")
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.logger = self.create_logger(self.LogTextEdit)
        self.ClickButton.clicked.connect(self.On_Click)
        self.logThread = LogThread(self)
        self.logThreadRunning = False
        # LogProvider.LogEvent.connect(self.LogWrite)    

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.ClickButton.setText(_translate("Form", "Start"))
        self.lineEdit.setText(_translate("Form", "Channel1Result"))
        self.lineEdit_2.setText(_translate("Form", "Channel2Result"))
        self.lineEdit_3.setText(_translate("Form", "Channel3Result"))
        self.lineEdit_4.setText(_translate("Form", "Channel4Result"))
        self.lineEdit_5.setText(_translate("Form", "Q1SN"))
        self.lineEdit_6.setText(_translate("Form", "Q2SN"))
        self.lineEdit_7.setText(_translate("Form", "Q3SN"))
        self.lineEdit_8.setText(_translate("Form", "Q4SN"))
        self.lineEdit_9.setText(_translate("Form", "Status"))

    def On_Click(self):
        # if(self.logThreadRunning!=True):
        #     self.logThread.start()
        #     self.logThreadRunning = True
        # else:
        #     pass
        # time.sleep(0.1)
        # self.logger.info('start')
        # time.sleep(0.1)
        # self.logger.info('start')

        self.ProcessCh1 = UDPThread(SN='SN123', port=3, logger=self.logger, form=self)
        self.ProcessCh2 = UDPThread2(SN='SN123', port=4, logger=self.logger, form=self)
        self.ProcessCh1.start()
        self.ProcessCh2.start()

    def LogWrite(self, logstring):
        self.LogTextEdit.append(logstring)

    def Ch1ResultShow(self, Result):
        self.Ch1Result.setText(Result)

    def Ch2ResultShow(self, Result):
        self.Ch2Result.setText(Result)

    def Ch3ResultShow(self, Result):
        self.Ch3Result.setText(Result)

    def Ch4ResultShow(self, Result):
        self.Ch4Result.setText(Result)

    def create_logger(self, LogTextEdit):
        """
        Create and return a logger
        """
        # Create a logging object
        logger = logging.getLogger('ALdfu')
        logger.setLevel(logging.INFO)

        # create a file handler which logs all levels, including DEBUG
        now = datetime.datetime.now()
        time_string = now.strftime("%Y%m%d_%H%M%S")

        log_path = "DFU_LOGS.dir"
        if not os.path.exists(log_path):
            os.makedirs(log_path)
        log_file_name = "%s/ALdfu%s_%s.log" % (log_path, 1, time_string)
        # fh = logging.FileHandler("%s/ALdfu%s_%s.log" % (log_path, log_port, time_string))
        fh = logging.FileHandler(log_file_name)
        fh.setLevel(logging.INFO)
        # create a console handler which logs levels above DEBUG
        ch = logging.StreamHandler()
        ch.setLevel(logging.INFO)

        # Set the formatting
        formatter = logging.Formatter("%(asctime)s [%(name)15s] %(levelname)8s: %(message)s")
        ch.setFormatter(formatter)
        fh.setFormatter(formatter)
        loghandler = LogQueHandler()
        logger.addHandler(loghandler)
        # logger.addHandler(handler)
        # Add the handlers to logger
        logger.addHandler(ch)
        logger.addHandler(fh)
        logger.info(f'LOG_FILE:{log_file_name}')
        return logger
